{"ast":null,"code":"const storage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    cb(null, './uploads');\n  },\n  filename: function (req, file, cb) {\n    cb(null, Date.now() + '-' + file.originalname);\n  }\n});\nconst fileFilter = (req, file, cb) => {\n  if (file.mimetype === 'image/jpeg' || file.mimetype === 'image/png') {\n    cb(null, true);\n  } else {\n    cb(new Error('Invalid file type. Only JPEG or PNG are allowed.'), false);\n  }\n};\nconst upload = multer({\n  storage: storage,\n  fileFilter: fileFilter\n});","map":{"version":3,"names":["storage","multer","diskStorage","destination","req","file","cb","filename","Date","now","originalname","fileFilter","mimetype","Error","upload"],"sources":["C:/Users/mtalh/Documents/5th Semester/Web/Project/FRONTEND/src/components/Addproduct.js"],"sourcesContent":["const storage = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, './uploads');\r\n  },\r\n  filename: function (req, file, cb) {\r\n    cb(null, Date.now() + '-' + file.originalname);\r\n  }\r\n});\r\n\r\nconst fileFilter = (req, file, cb) => {\r\n  if (file.mimetype === 'image/jpeg' || file.mimetype === 'image/png') {\r\n    cb(null, true);\r\n  } else {\r\n    cb(new Error('Invalid file type. Only JPEG or PNG are allowed.'), false);\r\n  }\r\n};\r\n\r\nconst upload = multer({\r\n  storage: storage,\r\n  fileFilter: fileFilter\r\n});\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,MAAM,CAACC,WAAW,CAAC;EACjCC,WAAW,EAAE,SAAAA,CAAUC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;IACpCA,EAAE,CAAC,IAAI,EAAE,WAAW,CAAC;EACvB,CAAC;EACDC,QAAQ,EAAE,SAAAA,CAAUH,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;IACjCA,EAAE,CAAC,IAAI,EAAEE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGJ,IAAI,CAACK,YAAY,CAAC;EAChD;AACF,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGA,CAACP,GAAG,EAAEC,IAAI,EAAEC,EAAE,KAAK;EACpC,IAAID,IAAI,CAACO,QAAQ,KAAK,YAAY,IAAIP,IAAI,CAACO,QAAQ,KAAK,WAAW,EAAE;IACnEN,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;EAChB,CAAC,MAAM;IACLA,EAAE,CAAC,IAAIO,KAAK,CAAC,kDAAkD,CAAC,EAAE,KAAK,CAAC;EAC1E;AACF,CAAC;AAED,MAAMC,MAAM,GAAGb,MAAM,CAAC;EACpBD,OAAO,EAAEA,OAAO;EAChBW,UAAU,EAAEA;AACd,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}