{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtalh\\\\OneDrive\\\\Documents\\\\5th Semester\\\\Web\\\\Project\\\\egs\\\\src\\\\components\\\\Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, Column } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductsPanel = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n\n  // Use a fetch request to get the products from the data.js file.\n  const fetchProducts = async () => {\n    const response = await fetch(\"/data.js\");\n    const data = await response.json();\n    setProducts(data);\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n\n  // Allow editing the product title and price.\n  const handleEditProduct = product => {\n    // Update the product's title and price in the state.\n    setProducts(prevProducts => {\n      const updatedProducts = prevProducts.map(p => {\n        if (p.id === product.id) {\n          p.title = product.title;\n          p.price = product.price;\n        }\n        return p;\n      });\n      return updatedProducts;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Table, {\n    data: products,\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      header: \"Title\",\n      accessor: \"title\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      header: \"Price\",\n      accessor: \"price\",\n      editable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      header: \"Actions\",\n      cellRenderer: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditProduct(row.original),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductsPanel, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductsPanel;\nexport default ProductsPanel;\nvar _c;\n$RefreshReg$(_c, \"ProductsPanel\");","map":{"version":3,"names":["React","useState","Table","Column","jsxDEV","_jsxDEV","ProductsPanel","_s","products","setProducts","fetchProducts","response","fetch","data","json","useEffect","handleEditProduct","product","prevProducts","updatedProducts","map","p","id","title","price","children","header","accessor","editable","fileName","_jsxFileName","lineNumber","columnNumber","cellRenderer","row","onClick","original","_c","$RefreshReg$"],"sources":["C:/Users/mtalh/OneDrive/Documents/5th Semester/Web/Project/egs/src/components/Orders.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Table, Column } from \"react-table\";\r\n\r\nconst ProductsPanel = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  // Use a fetch request to get the products from the data.js file.\r\n  const fetchProducts = async () => {\r\n    const response = await fetch(\"/data.js\");\r\n    const data = await response.json();\r\n    setProducts(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Allow editing the product title and price.\r\n  const handleEditProduct = (product) => {\r\n    // Update the product's title and price in the state.\r\n    setProducts((prevProducts) => {\r\n      const updatedProducts = prevProducts.map((p) => {\r\n        if (p.id === product.id) {\r\n          p.title = product.title;\r\n          p.price = product.price;\r\n        }\r\n        return p;\r\n      });\r\n      return updatedProducts;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Table data={products}>\r\n      <Column header=\"Title\" accessor=\"title\" editable />\r\n      <Column header=\"Price\" accessor=\"price\" editable />\r\n      <Column\r\n        header=\"Actions\"\r\n        cellRenderer={({ row }) => (\r\n          <button onClick={() => handleEditProduct(row.original)}>Edit</button>\r\n        )}\r\n      />\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ProductsPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,CAAC;IACxC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCL,WAAW,CAACI,IAAI,CAAC;EACnB,CAAC;EAEDE,SAAS,CAAC,MAAM;IACdL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,iBAAiB,GAAIC,OAAO,IAAK;IACrC;IACAR,WAAW,CAAES,YAAY,IAAK;MAC5B,MAAMC,eAAe,GAAGD,YAAY,CAACE,GAAG,CAAEC,CAAC,IAAK;QAC9C,IAAIA,CAAC,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,EAAE;UACvBD,CAAC,CAACE,KAAK,GAAGN,OAAO,CAACM,KAAK;UACvBF,CAAC,CAACG,KAAK,GAAGP,OAAO,CAACO,KAAK;QACzB;QACA,OAAOH,CAAC;MACV,CAAC,CAAC;MACF,OAAOF,eAAe;IACxB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEd,OAAA,CAACH,KAAK;IAACW,IAAI,EAAEL,QAAS;IAAAiB,QAAA,gBACpBpB,OAAA,CAACF,MAAM;MAACuB,MAAM,EAAC,OAAO;MAACC,QAAQ,EAAC,OAAO;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnD3B,OAAA,CAACF,MAAM;MAACuB,MAAM,EAAC,OAAO;MAACC,QAAQ,EAAC,OAAO;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnD3B,OAAA,CAACF,MAAM;MACLuB,MAAM,EAAC,SAAS;MAChBO,YAAY,EAAEA,CAAC;QAAEC;MAAI,CAAC,kBACpB7B,OAAA;QAAQ8B,OAAO,EAAEA,CAAA,KAAMnB,iBAAiB,CAACkB,GAAG,CAACE,QAAQ,CAAE;QAAAX,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IACpE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ,CAAC;AAACzB,EAAA,CAzCID,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}